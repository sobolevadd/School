Adresar 02 obsahuje priklad na implicitni hodnoty parametru a na pretezovani operatoru. 
V prikladu je definovana trida cplx pro komplexni cisla.

1. jeji konstruktor ma tvar 
   cplx(double r = 0, double im = 0);
   Implicitni hodnoty jsou definovany pro oba parametry a 
   jsou v obou pripadech 0. Takovouto funkci muzeme volat se dvema 
   parametry, pouze s jednim (prvnim) parametrem nebo bez parametru. 
   Za vynechane parametry dosadi prekladac implicitni hodnoty.

2. Vsimnete si, ze deklarace metod (funkci) cplx::Re()  a cplx::Im()
   jsme zapsali primo do deklarace tridy. To jde, neni-li deklarace 
   prilis rozsahla. Ma to ale jiste vedlejsi dusledky (takova metoda je
   vlozena - inline), ktere si vysvetlime pozdeji.

3. Pretezovani operatoru: C++ umoznuje rozsirit vyznam prevazne vetsiny 
   existujicich operatoru na uzivatelem definovane typy (objektove, tj. 
   class, struct, union) a vyctove (enum - jen novejsi prekladace).  
   Tomu se rika "pretezovani operatoru" - operator overloading.
   Definice operatoru + je

   cplx cplx::operator +( cplx c )
   {  return cplx( re+c.re, im+c.im ); }
   
   Jsou-li a,b instancce tridy cplx, tedy komplexni cisla, znamena zapis
   a+b
   totez co
   a.operator+(b);
   To znamena: volame metodu instance a a instanci b predame jako parametr.
   Proto napiseme-li v definici tohoto operatoru
 
   re + c.re,

   znamena to, za scitame realnou cast instance, pro niz metodu volame 
   (tj. a) a realnou cast parametru, tj. b.
   Totez udelame i s imaginarni casti.
   Ze ziskane realne a imaginarni casti pak slozime vysledek - proste 
   zavolame konstruktor tridy cplx, ten vytvori instanci a funkce
   operator+ ji vrati jako vysledek.

Pretezovani operatoru << a >> pro vstup a vystup
operator musi byt volna funkce a musi mit prototyp

ostream& operator(ostream& Proud, typ_vystupu c);  

Proud, do nehoz vystup smeruje, se musi predat jako prvni parametr jako odkaz na tridu ostream (tj. ostream&), jez predstavuje vystupni proudy. Vystupujici hodnota se predava jako druhy parametr.
Musi vracet odkaz na tento proud.

Podobne proud, z nehoz cteme, predame odkazem na tridu istream, a odkaz na tento proud je treba zade vratit. Promena, do niz se nactena hodnota ulozi, se preda odkazem jako druhy parametr.
Zde operator >> precte dve realna cisla, vytvori z nich cplx a to ulozi do promenne, na niz odkazuje parametr x.

4. Presnejsi informace o pretezovani (pro netrpelive):
   A) Operatory se pro ucekly pretezovani deli do 4 skupin:
      a) operatory, ktere nelze pretezovat: 
         ".", ".*", "?:", "::", sizeof, dynamic_cast, static_cast
          reinterpret_cast, const_cast
      b) operatory, ktere lze pretezovat pouze jako nestaticke metody 
         objektovych typu:
         "=", "[]", "()", "->", "(typ)" 
         tedy: prirazeni, indexovani, volani funkce, pristup ke slozkam
         pomoci ukazatele a pretypovani
      c) operatoru, ktere lze pretezovat bud jako nestaticke metody 
         nebo jako obycejne funkce, pokud  bude alespon jeden z parametru 
         objektoveho nebo vyctoveho typu:
         vsechny ostatni operatory, ktere krome new a delete (sem patri i 
         operatory "-=", "*=", "," aj.).
      d) operatory new a delete.

   B) Pri pretezovani nelze zmenit  prioritu ani asociativitu operatoru.
   
   C) Nelze zmenit vyznam operatoru pro standardni typy (int, double atd.). 
      Nelze take definovat nove operatory (treba "@").

Podrobneji si o tom budeme povidat nejspis na zacatku letniho semestru.